
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.ai
{

public sealed partial class MoveToRandomLocation :  ai.Task 
{
    public MoveToRandomLocation(JSONNode _json)  : base(_json) 
    {
        { if(!_json["origin_position_key"].IsString) { throw new SerializationException(); }  OriginPositionKey = _json["origin_position_key"]; }
        { if(!_json["radius"].IsNumber) { throw new SerializationException(); }  Radius = _json["radius"]; }
    }

    public MoveToRandomLocation(int id, string node_name, System.Collections.Generic.List<ai.Decorator> decorators, System.Collections.Generic.List<ai.Service> services, bool ignore_restart_self, string origin_position_key, float radius )  : base(id,node_name,decorators,services,ignore_restart_self) 
    {
        this.OriginPositionKey = origin_position_key;
        this.Radius = radius;
    }

    public static MoveToRandomLocation DeserializeMoveToRandomLocation(JSONNode _json)
    {
        return new ai.MoveToRandomLocation(_json);
    }

    public string OriginPositionKey { get; private set; }
    public float Radius { get; private set; }

    public const int ID = -2140042998;
    public override int GetTypeId() => ID;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NodeName:" + NodeName + ","
        + "Decorators:" + Bright.Common.StringUtil.CollectionToString(Decorators) + ","
        + "Services:" + Bright.Common.StringUtil.CollectionToString(Services) + ","
        + "IgnoreRestartSelf:" + IgnoreRestartSelf + ","
        + "OriginPositionKey:" + OriginPositionKey + ","
        + "Radius:" + Radius + ","
        + "}";
    }
    }
}
