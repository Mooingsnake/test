
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.role
{

public sealed partial class LevelBonus :  Bright.Config.BeanBase 
{
    public LevelBonus(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { var _json1 = _json["distinct_bonus_infos"]; if(!_json1.IsArray) { throw new SerializationException(); } DistinctBonusInfos = new System.Collections.Generic.List<role.DistinctBonusInfos>(_json1.Count); foreach(JSONNode __e in _json1.Children) { role.DistinctBonusInfos __v;  { if(!__e.IsObject) { throw new SerializationException(); }  __v = role.DistinctBonusInfos.DeserializeDistinctBonusInfos(__e); }  DistinctBonusInfos.Add(__v); }   }
    }

    public LevelBonus(int id, System.Collections.Generic.List<role.DistinctBonusInfos> distinct_bonus_infos ) 
    {
        this.Id = id;
        this.DistinctBonusInfos = distinct_bonus_infos;
    }

    public static LevelBonus DeserializeLevelBonus(JSONNode _json)
    {
        return new role.LevelBonus(_json);
    }

    public int Id { get; private set; }
    public System.Collections.Generic.List<role.DistinctBonusInfos> DistinctBonusInfos { get; private set; }

    public const int ID = -572269677;
    public override int GetTypeId() => ID;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in DistinctBonusInfos) { _e?.Resolve(_tables); }
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in DistinctBonusInfos) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "DistinctBonusInfos:" + Bright.Common.StringUtil.CollectionToString(DistinctBonusInfos) + ","
        + "}";
    }
    }
}
